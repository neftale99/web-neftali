{"version":3,"file":"contact-DWAiYkkk.js","sources":["../../src/contact/Utils/Size.js","../../src/contact/Utils/Time.js","../../src/contact/Experience/Camera.js","../../src/contact/Experience/Renderer.js","../../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../../node_modules/@emailjs/browser/es/store/store.js","../../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../../node_modules/@emailjs/browser/es/methods/init/init.js","../../node_modules/@emailjs/browser/es/api/sendPost.js","../../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../../node_modules/@emailjs/browser/es/methods/send/send.js","../../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","../../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../../node_modules/@emailjs/browser/es/index.js","../../src/contact/Site/Environment.js","../../src/contact/Shaders/vertex.glsl","../../src/contact/Shaders/fragment.glsl","../../src/contact/Site/Earth.js","../../src/contact/Site/Site.js","../../src/contact/Experience/Sources.js","../../src/contact/Utils/Resources.js","../../src/contact/Utils/Debug.js","../../src/contact/Shaders/Overlay/vertex.glsl","../../src/contact/Shaders/Overlay/fragment.glsl","../../src/contact/Experience/Experience.js","../../src/contact/contact.js"],"sourcesContent":["import EventEmitter from '/Experience/Utils/EventEmitter.js'\r\n\r\nexport default class Sizes extends EventEmitter\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        // Setup\r\n        this.width = window.innerWidth\r\n        this.height = window.innerHeight\r\n        this.pixelRatio = Math.min(window.devicePixelRatio, 2)\r\n\r\n        // Resize event\r\n        window.addEventListener('resize', () =>\r\n        {\r\n            this.width = window.innerWidth\r\n            this.height = window.innerHeight\r\n            this.pixelRatio = Math.min(window.devicePixelRatio, 2)\r\n\r\n            this.trigger('resize')\r\n        })\r\n    }\r\n}","import EventEmitter from '/Experience/Utils/EventEmitter.js'\r\n\r\nexport default class Time extends EventEmitter\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        // Setup\r\n        this.start = Date.now()\r\n        this.current = this.start\r\n        this.elapsed = 0\r\n        this.delta = 16\r\n\r\n        window.requestAnimationFrame(() =>\r\n        {\r\n            this.tick()\r\n        })\r\n    }\r\n\r\n    tick()\r\n    {\r\n        const currentTime = Date.now()\r\n        this.delta = currentTime - this.current\r\n        this.current = currentTime\r\n        this.elapsed = this.current - this.start\r\n\r\n        this.trigger('tick')\r\n\r\n        window.requestAnimationFrame(() =>\r\n        {\r\n            this.tick()\r\n        })\r\n    }\r\n}","import * as THREE from 'three'\r\nimport Experience from './Experience.js'\r\n\r\nexport default class Camera\r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n        this.sizes = this.experience.sizes\r\n        this.scene = this.experience.scene\r\n        this.canvas = this.experience.canvas\r\n        this.time = this.experience.time\r\n        this.site = this.experience.site\r\n\r\n        // Scroll\r\n        let scrollY = window.scrollY\r\n\r\n        window.addEventListener('scroll', () =>\r\n        {\r\n            scrollY = window.scrollY\r\n        })\r\n\r\n        // Scroll position save\r\n        window.addEventListener('beforeunload', () => \r\n        {\r\n            sessionStorage.setItem('scrollPosition', this.scrollY)\r\n        })\r\n    \r\n        // Initial position to load\r\n        window.addEventListener('load', () => \r\n        {\r\n            this.scrollPosition = sessionStorage.getItem('scrollPosition')\r\n            if(this.scrollPosition)\r\n            {\r\n                this.scrollY = 0\r\n                window.scrollTo(0, 0)\r\n                sessionStorage.removeItem('scrollPosition')\r\n            }\r\n        })\r\n    \r\n\r\n        // Cursor\r\n        this.cursor = {}\r\n        this.cursor.x = 0\r\n        this.cursor.y = 0\r\n\r\n        window.addEventListener('mousemove', (event) =>\r\n        {\r\n            this.cursor.x = event.clientX / this.sizes.width - 0.5\r\n            this.cursor.y = event.clientY / this.sizes.height - 0.5\r\n\r\n        })\r\n\r\n        this.setInstance()\r\n    }\r\n\r\n    setInstance()\r\n    {\r\n        // Group\r\n        this.cameraGroup = new THREE.Group()\r\n        this.scene.add(this.cameraGroup)\r\n\r\n        this.instance = new THREE.PerspectiveCamera(\r\n            35, \r\n            this.sizes.width / this.sizes.height,\r\n            0.1,\r\n            100\r\n        )\r\n        this.instance.position.z = 5\r\n        this.cameraGroup.add(this.instance)\r\n    }\r\n\r\n    resize()\r\n    {\r\n        this.instance.aspect = this.sizes.width / this.sizes.height\r\n        this.instance.updateProjectionMatrix()\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.instance.position.y = - scrollY / this.sizes.height * this.site.objectDistance \r\n\r\n        this.parallaxX = this.cursor.x * 0.5\r\n        this.parallaxY = - this.cursor.y * 0.5\r\n        this.cameraGroup.position.x += (\r\n            this.parallaxX - this.cameraGroup.position.x\r\n        ) * 1.5 * this.time.delta * 0.002\r\n        this.cameraGroup.position.y += (\r\n            this.parallaxY - this.cameraGroup.position.y\r\n        ) * 1.5 * this.time.delta * 0.002\r\n    }\r\n}\r\n","import * as THREE from 'three'\r\nimport Experience from './Experience.js'\r\n\r\nexport default class Renderer\r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n        this.canvas = this.experience.canvas\r\n        this.sizes = this.experience.sizes\r\n        this.scene = this.experience.scene\r\n        this.camera = this.experience.camera\r\n\r\n        this.setInstance()\r\n    }\r\n\r\n    setInstance()\r\n    {\r\n        this.instance = new THREE.WebGLRenderer({\r\n            canvas: this.canvas,\r\n            antialias: true,\r\n            alpha: true\r\n        })\r\n        this.instance.toneMapping = THREE.CineonToneMapping\r\n        this.instance.toneMappingExposure = 1\r\n        this.instance.setSize(this.sizes.width, this.sizes.height)\r\n        this.instance.setPixelRatio(this.sizes.pixelRatio)        \r\n    }\r\n\r\n    resize()\r\n    {\r\n        this.instance.setSize(this.sizes.width, this.sizes.height)\r\n        this.instance.setPixelRatio(this.sizes.pixelRatio)\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.instance.render(this.scene, this.camera.instance)\r\n    }\r\n}","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import * as THREE from 'three'\r\nimport Experience from '../Experience/Experience.js'\r\n\r\nexport default class Environment\r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n        this.scene = this.experience.scene\r\n        this.resources = this.experience.resources\r\n\r\n        // Setup\r\n        this.setDirectionalLight()\r\n    }\r\n\r\n    setDirectionalLight()\r\n    {\r\n        this.directionalLight = new THREE.DirectionalLight('#ffffff', 5)\r\n        this.directionalLight.position.set(- 2, 1, 3)\r\n        this.scene.add(this.directionalLight)\r\n\r\n        this.helper = new THREE.DirectionalLightHelper(this.directionalLight, 2)\r\n        this.scene.add(this.directionalLight)\r\n    }\r\n\r\n}","uniform float uTime;\r\n\r\nvarying vec3 vPosition;\r\nvarying vec3 vNormal;\r\n\r\n#include ./Includes/random2D.glsl\r\n\r\nvoid main()\r\n{\r\n    // Position\r\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\r\n\r\n    // Final position\r\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\r\n\r\n    // Model normal\r\n    vec4 modelNormal = modelMatrix * vec4(normal, 0.0);\r\n\r\n    // Varying\r\n    vPosition = modelPosition.xyz;\r\n    vNormal = modelNormal.xyz;\r\n}","uniform float uTime;\r\nuniform vec3 uColor;\r\n\r\nvarying vec3 vPosition;\r\nvarying vec3 vNormal;\r\n\r\nvoid main()\r\n{\r\n    // Normal\r\n    vec3 normal = normalize(vNormal);\r\n    if(!gl_FrontFacing)\r\n        normal *= - 1.0;\r\n\r\n    // Stripes\r\n    float stripes = mod((vPosition.y + uTime * 0.002) * 20.0, 1.2);\r\n    stripes = pow(stripes, 3.0);\r\n\r\n    // Fresnel\r\n    vec3 viewDirecion = normalize(vPosition - cameraPosition);\r\n    float fresnel = dot(viewDirecion, normal) + 1.0; \r\n    fresnel = pow(fresnel, 3.0);\r\n\r\n    // Fallof\r\n    float falloff = smoothstep(0.8, 0.0, fresnel);\r\n\r\n    // Holographic\r\n    float holographic = stripes * fresnel;\r\n    holographic += fresnel * 5.0; \r\n    holographic *= falloff; \r\n\r\n    // Final position\r\n    gl_FragColor = vec4(uColor, holographic);\r\n    #include <tonemapping_fragment>\r\n    #include <colorspace_fragment>\r\n}","import * as THREE from 'three'\r\nimport Experience from '../Experience/Experience.js'\r\nimport earthVertexShader from '../Shaders/vertex.glsl'\r\nimport earthFragmentShader from '../Shaders/fragment.glsl'\r\n\r\nexport default class Earth\r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n        this.scene = this.experience.scene\r\n        this.resources = this.experience.resources\r\n        this.time = this.experience.time\r\n        this.site = this.experience.site\r\n        this.debug = this.experience.debug\r\n\r\n        // Setup\r\n        this.resources = this.resources.items.earthModel\r\n\r\n        this.setModel()\r\n    }\r\n\r\n    setModel()\r\n    {\r\n        const materialParameters = {}\r\n        materialParameters.color = '#007548'\r\n        materialParameters.color2 = '#ffffff'\r\n        materialParameters.color3 = '#000000'\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            vertexShader: earthVertexShader,\r\n            fragmentShader: earthFragmentShader,\r\n            uniforms:\r\n            {\r\n                uTime: new THREE.Uniform(0),\r\n                uColor: new THREE.Uniform(new THREE.Color(materialParameters.color))\r\n            },\r\n            transparent: false,\r\n            side: THREE.DoubleSide,\r\n            blending: THREE.AdditiveBlending\r\n        })\r\n\r\n        const materialD = this.debug.ui.addFolder('Material')\r\n        materialD.close() \r\n        materialD.addColor(materialParameters, 'color').onChange(() => \r\n        {\r\n            this.material.uniforms.uColor.value.set(materialParameters.color)\r\n        })\r\n\r\n        this.material2 = new THREE.MeshPhysicalMaterial({\r\n            color: materialParameters.color2,\r\n            roughness: 0.373,\r\n            metalness: 0.154,\r\n            ior: 0.762,\r\n            reflectivity: 0.445,\r\n            iridescence: 0.389\r\n        })\r\n        \r\n        const material2D = this.debug.ui.addFolder('Material2')\r\n        material2D.close()\r\n        material2D.addColor(materialParameters, 'color2').onChange(() =>\r\n        {\r\n            this.material2.color.set(materialParameters.color2)\r\n        })\r\n        material2D.add(this.material2, 'roughness', 0, 1, 0.001)\r\n        material2D.add(this.material2, 'metalness', 0, 1, 0.001)\r\n        material2D.add(this.material2, 'ior', 0, 2, 0.001)\r\n        material2D.add(this.material2, 'reflectivity', 0, 1, 0.001)\r\n        material2D.add(this.material2, 'iridescence', 0, 1, 0.001)\r\n\r\n        this.material3 = new THREE.MeshPhysicalMaterial({\r\n            color: materialParameters.color3,\r\n            roughness: 0,\r\n            metalness: 1\r\n        })\r\n\r\n        const material3D = this.debug.ui.addFolder('Material3')\r\n        material3D.close()\r\n        material3D.addColor(materialParameters, 'color3').onChange(() =>\r\n        {\r\n            this.material3.color.set(materialParameters.color3)\r\n        })\r\n        material3D.add(this.material3, 'roughness', 0, 1, 0.001)\r\n        material3D.add(this.material3, 'metalness', 0, 1, 0.001)\r\n\r\n        this.model = this.resources.scene\r\n        this.model.scale.set(1.1, 1.1, 1.1)\r\n        this.model.position.y = - this.site.objectDistance * 0.37\r\n        this.model.position.x = 1.5\r\n        this.scene.add(this.model)\r\n\r\n        this.model.traverse((child) =>\r\n        {\r\n            this.map = this.model.children.find((child) => child.name === 'Map')\r\n            this.map.material = this.material\r\n\r\n            this.ocean = this.model.children.find((child) => child.name === 'Icosphere')\r\n            this.ocean.material = this.material2\r\n\r\n            this.wire = this.model.children.find((child) => child.name === 'Sphere-Wire')\r\n            this.wire.material = this.material3\r\n\r\n        })\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.model.rotation.y = this.time.elapsed * 0.0004\r\n        this.material.uniforms.uTime.value = this.time.elapsed * 0.1\r\n    }\r\n}","import * as THREE from 'three'\r\nimport emailjs from '@emailjs/browser' \r\nimport Experience from '../Experience/Experience.js'\r\nimport Environment from './Environment.js'\r\nimport Earth from './Earth.js'\r\n\r\nexport default class Site\r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n        this.scene = this.experience.scene\r\n        this.resources = this.experience.resources\r\n\r\n        // Camera position\r\n        this.objectDistance = 2\r\n\r\n        // Wait for resources\r\n        this.resources.on('ready', () =>\r\n        {\r\n            // Setup\r\n            this.earth = new Earth()\r\n            this.environment = new Environment()\r\n        })\r\n\r\n        this.buttonEmailjs()\r\n    }\r\n\r\n    buttonEmailjs()\r\n    {\r\n        emailjs.init(import.meta.env.VITE_EMAILJS_USER_ID)\r\n        const btn = document.getElementById('button')\r\n        \r\n        document.getElementById('form')\r\n            .addEventListener('submit', (event) => \r\n            {\r\n                event.preventDefault()\r\n         \r\n                btn.value = 'Sending...'\r\n         \r\n                const serviceID = 'default_service'  \r\n                const templateID = 'template_cu86p4i'  \r\n         \r\n                emailjs.sendForm(serviceID, templateID, event.target).then(() => \r\n                {\r\n                    btn.value = 'Send Email'\r\n                    alert('Sent!')\r\n                }, \r\n                (err) => \r\n                {\r\n                    btn.value = 'Send Email';\r\n                    alert(JSON.stringify(err));\r\n                })\r\n            })\r\n    }\r\n\r\n    update()\r\n    {\r\n        if(this.earth)\r\n            this.earth.update()\r\n    }\r\n}","export default[\r\n    {\r\n        name: 'earthModel',\r\n        type: 'gltfModel',\r\n        path: './models/earth.glb'\r\n    }\r\n]","import * as THREE from 'three' \r\nimport gsap from 'gsap'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\r\nimport Sources from '../Experience/Sources.js'\r\nimport EventEmitter from '/Experience/Utils/EventEmitter.js'\r\nimport Experience from '../Experience/Experience.js'\r\n\r\nexport default class Resources extends EventEmitter\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        this.experience = new Experience()\r\n\r\n        // Options\r\n        this.sources = Sources\r\n\r\n        // Setup\r\n        this.items = {}\r\n        this.toLoad = this.sources.length\r\n        this.loaded = 0\r\n\r\n        this.setLoaders()\r\n        this.startLoading()\r\n    }\r\n\r\n    setLoaders()\r\n    {\r\n        this.loadingBarElement = document.querySelector('.loading-bar')\r\n        this.webglElement = document.querySelector('.webgl')\r\n        this.conteinerElement = document.querySelector('.container')\r\n        this.navElement = document.querySelector('.navbar')\r\n        this.textElement = document.querySelector('.text')\r\n        this.iconElement = document.querySelector('.icons')\r\n\r\n        this.conteinerElement.classList.add('hidden')\r\n        this.navElement.classList.add('hidden')\r\n        this.textElement.classList.add('hidden')\r\n        this.iconElement.classList.add('hidden')\r\n\r\n        this.loadingManager = new THREE.LoadingManager(\r\n            // Loaded\r\n            () =>\r\n            {\r\n                gsap.delayedCall(0.5, () => {\r\n\r\n                    gsap.to(\r\n                        this.experience.overlayMaterial.uniforms.uAlpha,\r\n                        {\r\n                            duration: 3,\r\n                            value: 0,\r\n                            delay: 1,\r\n                            onUpdate: () => {\r\n                                this.conteinerElement.classList.remove('hidden')\r\n                                this.navElement.classList.remove('hidden')\r\n                                this.textElement.classList.remove('hidden')\r\n                                this.iconElement.classList.remove('hidden')\r\n                            }\r\n                        }\r\n                    )\r\n\r\n                    this.loadingBarElement.classList.add('ended')\r\n                    this.loadingBarElement.style.transform = ''\r\n                    this.webglElement.style.zIndex = '0'\r\n                })                \r\n            },\r\n\r\n            // Progress\r\n            (itemUrl, itemsLoaded, itemsTotal) =>\r\n            {\r\n                this.progressRatio = itemsLoaded / itemsTotal\r\n                this.loadingBarElement.style.transform = `scaleX(${this.progressRatio})`\r\n            }\r\n        )\r\n\r\n        this.loaders = {}\r\n        this.loaders.dracoLoader = new DRACOLoader(this.loadingManager)\r\n        this.loaders.dracoLoader.setDecoderPath('/draco/')\r\n        this.loaders.gltfLoader = new GLTFLoader(this.loadingManager)\r\n        this.loaders.gltfLoader.setDRACOLoader(this.loaders.dracoLoader)\r\n    }\r\n\r\n    startLoading()\r\n    {\r\n        // Load each sources\r\n        for(const source of this.sources)\r\n        {\r\n            if(source.type === 'gltfModel')\r\n            {\r\n                this.loaders.gltfLoader.load(\r\n                    source.path,\r\n                    (file) =>\r\n                    {\r\n                        this.sourceLoaded(source, file)\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    sourceLoaded(source, file)\r\n    {\r\n        this.items[source.name] = file\r\n\r\n        this.loaded++\r\n\r\n        if(this.loaded === this.toLoad)\r\n        {\r\n            this.trigger('ready')\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\nimport * as dat from 'lil-gui'\r\nimport Experience from '../Experience/Experience.js'\r\n\r\nexport default class Debug \r\n{\r\n    constructor()\r\n    {\r\n        this.experience = new Experience()\r\n\r\n        // Setup\r\n        this.ui = new dat.GUI({ width: 325})\r\n        this.ui.close()\r\n\r\n        this.ui.domElement.style.display = 'none'\r\n    }\r\n}","void main()\r\n{\r\n    // Final position\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n\r\n}","uniform float uAlpha;\r\n\r\nvoid main()\r\n{\r\n    gl_FragColor = vec4(0.0, 0.0, 0.0, uAlpha);\r\n    #include <tonemapping_fragment>\r\n    #include <colorspace_fragment>\r\n}","import * as THREE from 'three'\r\nimport gsap from 'gsap'\r\nimport Sizes from '../Utils/Size.js'\r\nimport Time from '../Utils/Time.js'\r\nimport Camera from './Camera.js'\r\nimport Renderer from './Renderer.js'\r\nimport Site from '../Site/Site.js'\r\nimport Resources from '../Utils/Resources.js'\r\nimport sources from './Sources.js' \r\nimport Debug from '../Utils/Debug.js'\r\nimport overlayVertexShader from '../Shaders/Overlay/vertex.glsl'\r\nimport overlayFragmentShader from '../Shaders/Overlay/fragment.glsl'\r\n\r\nlet instance = null\r\n\r\nexport default class Experience\r\n{\r\n    constructor(canvas)\r\n    {\r\n        // Singleton\r\n        if(instance)\r\n        {\r\n            return instance\r\n        }\r\n        instance = this\r\n\r\n        // Options\r\n        this.canvas = canvas\r\n\r\n        // Setup\r\n        this.sizes = new Sizes()\r\n        this.time = new Time()\r\n        this.scene = new THREE.Scene()\r\n        this.resources = new Resources(sources)\r\n        this.site = new Site()\r\n        this.camera = new Camera()\r\n        this.renderer = new Renderer()\r\n        this.debug = new Debug()\r\n\r\n        // Resize event\r\n        this.sizes.on('resize', () =>\r\n        {\r\n            this.resize()\r\n        })\r\n\r\n        // Time tick event\r\n        this.time.on('tick', () =>\r\n        {\r\n            this.update()\r\n        })\r\n\r\n        this.setLoader()\r\n    }\r\n\r\n    resize()\r\n    {\r\n        this.camera.resize()\r\n        this.renderer.resize()\r\n    }\r\n\r\n    update()\r\n    {  \r\n        this.camera.update()\r\n        this.site.update()\r\n        this.renderer.update()\r\n    }\r\n\r\n    setLoader() \r\n    {\r\n        this.overlayGeometry = new THREE.PlaneGeometry(8, 8, 1, 1)\r\n        this.overlayMaterial = new THREE.ShaderMaterial({\r\n            vertexShader: overlayVertexShader,\r\n            fragmentShader: overlayFragmentShader,\r\n            uniforms: {\r\n                uAlpha: new THREE.Uniform(1)\r\n            },\r\n            transparent: true,\r\n\r\n        })\r\n        this.overlay = new THREE.Mesh(this.overlayGeometry, this.overlayMaterial)\r\n        this.overlay.position.z = 2\r\n        this.scene.add(this.overlay)\r\n    }\r\n\r\n}","import Experience from './Experience/Experience.js'\r\n\r\nconst experience = new Experience(document.querySelector('canvas.webgl'))"],"names":["Sizes","EventEmitter","Time","currentTime","Camera","Experience","event","THREE.Group","THREE.PerspectiveCamera","Renderer","THREE.WebGLRenderer","THREE.CineonToneMapping","EmailJSResponseStatus","_status","_text","createWebStorage","key","value","store","buildOptions","options","init","origin","opts","sendPost","url","data","headers","response","message","responseStatus","validateParams","publicKey","serviceID","templateID","validateTemplateParams","templateParams","isHeadless","navigator","headlessError","validateBlockListParams","list","watchVariable","isBlockListDisabled","_a","getValue","name","isBlockedValueInParams","params","blockedEmailError","validateLimitRateParams","throttle","id","getLeftTime","storage","lastTime","isLimitRateHit","defaultID","limitRateError","send","blockHeadless","storageProvider","blockList","limitRate","validateForm","form","findHTMLForm","sendForm","currentForm","formData","emailjs","Environment","THREE.DirectionalLight","THREE.DirectionalLightHelper","vertex_default","fragment_default","Earth","materialParameters","THREE.ShaderMaterial","earthVertexShader","earthFragmentShader","THREE.Uniform","THREE.Color","THREE.DoubleSide","THREE.AdditiveBlending","materialD","THREE.MeshPhysicalMaterial","material2D","material3D","child","Site","btn","err","sources","Resources","Sources","THREE.LoadingManager","gsap","itemUrl","itemsLoaded","itemsTotal","DRACOLoader","GLTFLoader","source","file","Debug","dat.GUI","instance","canvas","THREE.Scene","THREE.PlaneGeometry","overlayVertexShader","overlayFragmentShader","THREE.Mesh"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}